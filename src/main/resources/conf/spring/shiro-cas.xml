<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.0.xsd">

	  <!-- 缓存管理器 使用Ehcache实现 -->
    <bean id="cacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager">
        <property name="cacheManagerConfigFile" value="classpath:conf/cache/ehcache.xml"/>
    </bean>

    <!-- 凭证匹配器 -->
    <bean id="credentialsMatcher" class="com.hisun.base.auth.credentials.RetryLimitHashedCredentialsMatcher">
        <constructor-arg ref="cacheManager"/>
        <property name="hashAlgorithmName" value="md5"/>
        <property name="hashIterations" value="2"/>
        <property name="storedCredentialsHexEncoded" value="true"/>
    </bean>


    <bean id="casRealm" class="com.hisun.saas.sys.auth.realm.CasRealm">
        <property name="cachingEnabled" value="true"/>
        <property name="authenticationCachingEnabled" value="true"/>
        <property name="authenticationCacheName" value="authenticationCache"/>
        <!--该地址为cas server地址 -->
        <property name="casServerUrlPrefix" value="${shiro.casServer.url}"/>
       <!-- 该地址为是当前应用 CAS 服务 URL，即用于接收并处理登录成功后的 Ticket 的，
	    	必须和loginUrl中的service参数保持一致，否则服务器会判断service不匹配-->  
        <property name="casService" value="${shiro.client.cas}"/>
    </bean>
    
    <!-- 会话ID生成器 -->
    <bean id="sessionIdGenerator" class="org.apache.shiro.session.mgt.eis.JavaUuidSessionIdGenerator"/>

    <!-- 会话Cookie模板 -->
    <bean id="sessionIdCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
    <!-- sid如果改为JSESSIONID会导致重定向循环 -->
        <constructor-arg value="sid"/>
        <property name="httpOnly" value="true"/>
        <property name="maxAge" value="-1"/>
    </bean>

    <bean id="rememberMeCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
        <constructor-arg value="rememberMe"/>
        <property name="httpOnly" value="true"/>
        <property name="maxAge" value="2592000"/><!-- 30天 -->
    </bean>

    <!-- rememberMe管理器 -->
    <bean id="rememberMeManager" class="org.apache.shiro.web.mgt.CookieRememberMeManager">
        <!-- rememberMe cookie加密的密钥 建议每个项目都不一样 默认AES算法 密钥长度（128 256 512 位）-->
        <property name="cipherKey"
                  value="#{T(org.apache.shiro.codec.Base64).decode('4AvVhmFLUs0KTA3Kprsdag==')}"/>
        <property name="cookie" ref="rememberMeCookie"/>
    </bean>

    <!-- 会话DAO -->
    <bean id="sessionDAO" class="org.apache.shiro.session.mgt.eis.EnterpriseCacheSessionDAO">
        <property name="activeSessionsCacheName" value="shiro-activeSessionCache"/>
        <property name="sessionIdGenerator" ref="sessionIdGenerator"/>
    </bean>

    <!-- 会话验证调度器 -->
    <bean id="sessionValidationScheduler" class="org.apache.shiro.session.mgt.quartz.QuartzSessionValidationScheduler">
        <property name="sessionValidationInterval" value="600000"/>
        <property name="sessionManager" ref="sessionManager"/>
    </bean>

    <!-- 会话管理器 -->
    <bean id="sessionManager" class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">
        <property name="globalSessionTimeout" value="600000"/>
        <property name="deleteInvalidSessions" value="true"/>
        <property name="sessionValidationSchedulerEnabled" value="true"/>
        <property name="sessionValidationScheduler" ref="sessionValidationScheduler"/>
        <property name="sessionDAO" ref="sessionDAO"/>
        <property name="sessionIdCookieEnabled" value="true"/>
        <property name="sessionIdCookie" ref="sessionIdCookie"/>
    </bean>

	<!-- In CAS server, you can have "remember me" support. This information is pushed through SAML validation or CAS customized validation.
	To reflect the CAS-remember me status in Shiro, you have to define a specific CasSubjectFactory in your Shiro configuration
	-->
    <bean id="casSubjectFactory" class="org.apache.shiro.cas.CasSubjectFactory"/>
    <!-- 安全管理器 -->
    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
        <property name="realm" ref="casRealm"/>
        <property name="sessionManager" ref="sessionManager"/>
        <property name="cacheManager" ref="cacheManager"/>
        <property name="rememberMeManager" ref="rememberMeManager"/>
        <property name="subjectFactory" ref="casSubjectFactory"/>
    </bean>

    <!-- 相当于调用SecurityUtils.setSecurityManager(securityManager) -->
    <bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
        <property name="staticMethod" value="org.apache.shiro.SecurityUtils.setSecurityManager"/>
        <property name="arguments" ref="securityManager"/>
    </bean>

    <bean id="casFilter" class="org.apache.shiro.cas.CasFilter">
        <!--配置验证错误时的失败页面（Ticket 校验不通过时展示的错误页面） -->
        <property name="failureUrl" value="${shiro.failureUrl}"/>
    </bean>
	<bean id="casLogoutFilter" class="com.hisun.base.auth.cas.session.CasLogoutFilter">
        <property name="sessionManager" ref="sessionManager"/>
	</bean>
	<bean id="logoutFilter" class="org.apache.shiro.web.filter.authc.LogoutFilter">
	    <property name="redirectUrl" value="${shiro.logout.url}"/>
	</bean>
	<bean id="sysUserFilter"
		class="com.hisun.saas.sys.auth.filter.SysUserFilter" />
	<bean id="formAuthenticationFilter"  
        class="org.apache.shiro.web.filter.authc.FormAuthenticationFilter" />

    <bean id="ajaxNoAuthenticationFilter"
          class="com.hisun.base.auth.filter.AjaxNoAuthenticationFilter">
        <constructor-arg>
            <value><![CDATA[{"success":false,"privilegeCode":-1,"message":"登录会话已过期，请重新登录"}]]></value>
        </constructor-arg>
        <property name="loginUrl" value="/login" />
    </bean>
        
    <!-- Shiro的Web过滤器 -->
    <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
        <property name="securityManager" ref="securityManager"/>
        <property name="loginUrl" value="${shiro.login.url}"/>
        <property name="successUrl" value="${shiro.login.success.url}"/>
        <property name="filters">
            <util:map>
                <entry key="cas" value-ref="casFilter"/>
                <entry key="logout" value-ref="logoutFilter" />
                <entry key="casLogout" value-ref="casLogoutFilter" />
                <entry key="sysUser" value-ref="sysUserFilter" />
                <entry key="authc" value-ref="formAuthenticationFilter" />
                <entry key="ajaxNoAuthc" value-ref="ajaxNoAuthenticationFilter"></entry>
            </util:map>
        </property>
        <property name="filterChainDefinitions">
            <value>
                /casFailure.jsp = anon
                /cas = casLogout,cas
                /logout = logout
                
                /ueditor/** = anon <!-- 富文本编辑框 -->
				/api/** = anon
				/js/** = anon
				/css/** = anon
				/images/** = anon
				/accessDenied = anon
				/signin = anon
				/kaptcha/** = anon
				/forgetPassword = anon
				/load/assignment/** = anon
				/platform/user/activate = anon
				/platform/user/checkUserName = anon
				/platform/user/save = anon
				/platform/user/forget/password = anon
				/platform/user/profile/password = anon
				/platform/user/changePwd = anon
                /platform/admin/user/forget/password = anon
				/outside/** = anon
				/un/** = anon  <!-- 过滤所有不用权限验证过滤的URL -->
				<!-- /logout = logout -->
				/** = ajaxNoAuthc,user,sysUser
            </value>
        </property>
    </bean>

    <!-- Shiro生命周期处理器-->
    <bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>

</beans>