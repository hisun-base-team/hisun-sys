<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:util="http://www.springframework.org/schema/util"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.0.xsd">

	<!--ehcache -->
	<bean id="ehcacheManager"
		  class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean">
		<property name="configLocation" value="classpath:conf/cache/ehcache.xml" />
	</bean>
	<bean id="springCacheManager" class="org.springframework.cache.ehcache.EhCacheCacheManager">
		<property name="cacheManager" ref="ehcacheManager" />
	</bean>
	<!-- 缓存管理器 -->
	<bean id="cacheManager"
		  class="com.hisun.saas.sys.auth.cache.SpringCacheManagerWrapper">
		<property name="cacheManager" ref="springCacheManager" />
	</bean>

	<bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
		<property name="securityManager" ref="securityManager" />
	</bean>


	<!-- 凭证匹配器 主要实现了密码错误次数限制-->
	<bean id="credentialsMatcher" class="com.hisun.saas.sys.auth.credentials.RetryLimitHashedCredentialsMatcher">
		<constructor-arg ref="cacheManager" />
		<property name="hashAlgorithmName" value="md5" />
		<property name="hashIterations" value="2" />
		<property name="storedCredentialsHexEncoded" value="true" />
	</bean>

	<!-- Realm实现 -->
	<bean id="userRealm" class="com.hisun.saas.sys.auth.realm.UserRealm">
		<property name="credentialsMatcher" ref="credentialsMatcher" />
		<property name="cachingEnabled" value="false" />
		<!--<property name="authenticationCachingEnabled" value="true"/> -->
		<!--<property name="authenticationCacheName" value="authenticationCache"/> -->
		<!--<property name="authorizationCachingEnabled" value="true"/> -->
		<!--<property name="authorizationCacheName" value="authorizationCache"/> -->
	</bean>

	<!-- 会话ID生成器 -->
	<bean id="sessionIdGenerator" class="org.apache.shiro.session.mgt.eis.JavaUuidSessionIdGenerator" />

	<!-- 会话Cookie模板 -->
	<bean id="sessionIdCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
		<constructor-arg value="sid" />
		<property name="httpOnly" value="true" />
		<property name="maxAge" value="-1" /><!--会话级cookie，关闭浏览器失效-->
	</bean>
	<!-- 表示浏览器关闭时失效此Cookie -->
	<bean id="rememberMeCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
		<constructor-arg value="rememberMe" />
		<property name="httpOnly" value="true" />
		<property name="maxAge" value="2592000" /><!-- 30天 -->
	</bean>

	<!-- rememberMe管理器 -->
	<bean id="rememberMeManager" class="org.apache.shiro.web.mgt.CookieRememberMeManager">
		<!-- rememberMe cookie加密的密钥 建议每个项目都不一样 默认AES算法 密钥长度（128 256 512 位） -->
		<property name="cipherKey"
				  value="#{T(org.apache.shiro.codec.Base64).decode('4AvVhmFLUs0KTA3Kprsdag==')}" />
		<property name="cookie" ref="rememberMeCookie" />
	</bean>

	<!-- 会话DAO -->
	<bean id="sessionDAO"
		  class="org.apache.shiro.session.mgt.eis.EnterpriseCacheSessionDAO">
		<property name="activeSessionsCacheName" value="shiro-activeSessionCache" />
		<property name="sessionIdGenerator" ref="sessionIdGenerator" />
	</bean>

	<!-- 会话验证调度器 -->
	<bean id="sessionValidationScheduler"
		  class="org.apache.shiro.session.mgt.quartz.QuartzSessionValidationScheduler">
		<property name="sessionValidationInterval" value="600000" />
		<property name="sessionManager" ref="sessionManager" />
	</bean>

	<!-- 会话管理器 定时清除没用SESSION -->
	<bean id="sessionManager"
		  class="com.hisun.saas.sys.auth.session.SimpleWebSessionManager">
		<property name="sessionIdUrlRewritingEnabled" value="false" />
		<property name="globalSessionTimeout" value="600000" />
		<property name="sessionValidationInterval" value="30000" />
		<property name="cacheManager" ref="cacheManager" />
		<property name="deleteInvalidSessions" value="true" />
		<property name="sessionValidationSchedulerEnabled" value="true" />
		<property name="sessionValidationScheduler" ref="sessionValidationScheduler" />
		<property name="sessionDAO" ref="sessionDAO" />
		<property name="sessionIdCookieEnabled" value="true" />
		<property name="sessionIdCookie" ref="sessionIdCookie" />
	</bean>

	<!-- 安全管理器 -->
	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
		<property name="realm" ref="userRealm" />
		<property name="sessionManager" ref="sessionManager" />
		<property name="cacheManager" ref="cacheManager" />
		<property name="rememberMeManager" ref="rememberMeManager" />
	</bean>

	<!-- 相当于调用SecurityUtils.setSecurityManager(securityManager) -->
	<bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
		<property name="staticMethod"
				  value="org.apache.shiro.SecurityUtils.setSecurityManager" />
		<property name="arguments" ref="securityManager" />
	</bean>

	<!-- 基于Form表单的身份验证过滤器 -->
	<bean id="formAuthenticationFilter"
		  class="org.apache.shiro.web.filter.authc.FormAuthenticationFilter">
		<property name="usernameParam" value="username" />
		<property name="passwordParam" value="password" />
		<property name="rememberMeParam" value="rememberMe" />
		<property name="loginUrl" value="/login" />
	</bean>

	<!-- 验证码 -->
	<bean id="kaptchaFormAuthenticationFilter"
		  class="com.hisun.saas.sys.auth.filter.KaptchaFormAuthenticationFilter">
		<property name="usernameParam" value="username" />
		<property name="passwordParam" value="password" />
		<property name="rememberMeParam" value="rememberMe" />
		<property name="captchaParam" value="kaptcha"></property>
		<property name="loginUrl" value="/login" />
	</bean>

	<!-- 超时后，异步请求返回处理 -->
	<bean id="ajaxNoAuthenticationFilter"
		  class="com.hisun.saas.sys.auth.filter.AjaxNoAuthenticationFilter">
		<constructor-arg>
			<value><![CDATA[{"success":false,"code":-1,"message":"登录会话已过期，请重新登录"}]]></value>
		</constructor-arg>
		<property name="loginUrl" value="/login" />
	</bean>
	<!-- 账号冻结过滤器，暂时没有使用 -->
	<bean id="freezeTenantUserFilter" class="com.hisun.saas.sys.auth.filter.FreezeTenantUserFilter"></bean>
	<bean id="sysUserFilter" class="com.hisun.saas.sys.auth.filter.SysUserFilter" />
	<!-- 登出删除SESSION -->
	<bean id="forceLogoutFilter" class="com.hisun.saas.sys.auth.filter.ForceLogoutFilter" ></bean>

	<!-- Shiro的Web过滤器 -->
	<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
		<!-- Shiro的核心安全接口,这个属性是必须的 -->
		<property name="securityManager" ref="securityManager" />
		<property name="loginUrl" value="/login" />
		<!-- 授权失败跳转路径 -->
		<property name="unauthorizedUrl" value="/WEB-INF/jsp/error/accessDenied.jsp" />
		<property name="filters">
			<util:map>
				<entry key="authc" value-ref="kaptchaFormAuthenticationFilter" />
				<entry key="sysUser" value-ref="sysUserFilter" />
				<entry key="ajaxNoAuthc" value-ref="ajaxNoAuthenticationFilter"></entry>
				<entry key="forceLogoutFilter" value-ref="forceLogoutFilter"></entry>
			</util:map>
		</property>
		<property name="filterChainDefinitions">
			<value>
				/license/** = anon
				/WEB-INF/jsp/error/** = anon <!-- 错误页那些不用登陆 -->
				/ueditor/** = anon <!-- 富文本编辑框 -->
				/api/open/** = anon
				/js/** = anon
				/css/** = anon
				/images/** = anon
				/login = anon
				/admin/login = anon
				/accessDenied = anon
				/signin = anon
				/admin/signin = anon
				/logout = anon
				/admin/logout = anon
				/kaptcha/** = anon
				/admin/kaptcha/** = anon
				/admin/sms/send/** = anon
				/forgetPassword = anon
				/admin/forgot = anon
				/load/assignment/** = anon
				/sys/user/activate = anon
				/sys/user/checkUserName = anon
				/sys/user/save = anon
				/sys/user/forget/password = anon
				/sys/admin/user/un/** = anon
				/sys/admin/user/forget/password = anon
				/sys/admin/user/forgot = anon
				/sys/user/profile/password = anon
				/sys/admin/user/profile/password = anon
				/sys/user/changePwd = anon
				/sys/admin/user/pwdreset = anon
				/sys/tenant/user/forgot = anon
				/sys/tenant/user/pwdreset/** = anon
				/sys/tenant/user/getActivateLink/** = anon
				/sys/tenant/user/activate/** = anon
				/sys/tenant/user/registerToNewTenant/** = anon
				/register/** = anon <!-- 注册页面 -->
				/un/** = anon  <!-- 过滤所有不用权限验证过滤的URL -->
				/sys/tenant/user/un/** = anon  <!-- 过滤所有不用权限验证过滤的URL -->
				/sys/tenant/register/** = anon <!-- 注册控制器，不用权限 -->
				/authenticated = authc
				/** = ajaxNoAuthc,forceLogoutFilter,user,sysUser
			</value>
		</property>
	</bean>

	<!-- Shiro生命周期处理器 -->
	<bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor" />
</beans>